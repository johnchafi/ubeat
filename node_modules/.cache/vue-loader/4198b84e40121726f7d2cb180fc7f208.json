{"remainingRequest":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/src/views/Search.vue?vue&type=style&index=0&id=1a1d373c&scoped=true&lang=css&","dependencies":[{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/src/views/Search.vue","mtime":1588549477000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NhcmRNYWluU29uZ3MgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKI2NhcmRNYWluU29uZ3M6aG92ZXJ7CiAgY3Vyc29yOiBncmFiOwogIGJveC1zaGFkb3c6IDAgMTRweCAyOHB4IHJnYmEoMCwgMCwgMCwgMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yMik7CiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSk7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMTc0NDsKfQoKI0FydGlzdE5hbWVTZWFyY2hQYWdlOmhvdmVyewogIGN1cnNvcjogZ3JhYjsKICBib3gtc2hhZG93OiAwIDE0cHggMjhweCByZ2JhKDAsIDAsIDAsIDAuMjUpLCAwIDEwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMjIpOwogIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpOwogIGJhY2tncm91bmQtY29sb3I6ICNmZjE3NDQ7Cn0KCiNjYXJkTWFpbkRpdiB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCiNjYXJkTWFpbjpob3ZlcnsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBjODUzOwp9CiNtYWduaW9sOmhvdmVyewogIGJhY2tncm91bmQtY29sb3I6ICMwMGM4NTM7Cn0K"},{"version":3,"sources":["Search.vue"],"names":[],"mappingssBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"search\">\n    <v-app id=\"inspire\">\n      <v-container\n        style=\"display: flex; flex-direction: row; justify-content: space-around; align-items: flex-start; margin-top: 2%\"\n      >\n        <v-row>\n          <v-col cols=\"12\" sm=\"12\">\n            <!--            <v-text-field-->\n            <!--              id=\"textField\"-->\n            <!--              label=\"Create your playlist\"-->\n            <!--              single-line-->\n            <!--              solo-->\n            <!--            ></v-text-field>-->\n            <!------------------------------------------------------------------->\n            <!------------------------------------------------------------------->\n            <!------------------------------------------------------------------->\n            <!------------------------------------------------------------------->\n            <v-card color=\"#E0E0E0\" elevation=\"7\">\n              <v-card-text>\n                <v-autocomplete\n                  v-on:input=\"makeSearch\"\n\n\n                  v-model=\"model\"\n                  :items=\"items\"\n                  :loading=\"isLoading\"\n                  :search-input.sync=\"search\"\n                  color=\"#ff1744\"\n                  hide-no-data\n                  hide-selected\n                  item-text=\"artistName\"\n                  item-value=\"API\"\n                  :label=\"LabelSearch\"\n                  :placeholder=\"placeholderSearch\"\n                  prepend-icon=\"mdi-magnify\"\n                  return-object\n                ></v-autocomplete>\n              </v-card-text>\n              <v-divider></v-divider>\n            </v-card>\n            <!------------------------------------------------------------------->\n            <!------------------------------------------------------------------->\n          </v-col>\n        </v-row>\n        <!------------------------------------------------------------------->\n        <!------------------------------------------------------------------->\n        <v-tooltip bottom>\n          <template v-slot:activator=\"{ on }\">\n            <v-btn\n              style=\"background-color:\t#ff1744 ;margin-left: 5%; border-radius: 50px 50px 50px 50px\"\n              :elevation=\"9\"\n              :width=\"80\"\n              :height=\"80\"\n              v-on=\"on\"\n              @click=\"OpenDialogSettingsSearch\"\n            >\n              <v-icon style=\"color: #ffffff; font-size: xx-large\"\n              >mdi-tune</v-icon\n              >\n            </v-btn>\n          </template>\n          <span>click button to set your search</span>\n        </v-tooltip>\n      </v-container>\n      <!---------------------------------------------------------------------------------------------->\n      <!----------------- C est ici que l\"affiche de la liste des resultat se fera ----------------------------->\n\n      <div style=\"display: flex; flex-direction: column; justify-content: space-around; align-items: center;\"\n      >\n        <v-card\n          v-if=\"this.displayArtistCard\"\n          :elevation=\"9\"\n          height=\"maximum\"\n          width=\"2000\"\n          id=\"cardMainArtist\"\n          style=\"display: flex; flex-direction: column; background-color: #E0E0E0; align-items: center\"\n        >\n          <v-card-title\n            style=\"font-family: Aclonica\"\n          >Artist</v-card-title>\n\n          <v-divider></v-divider>\n          <v-row justify=\"center\">\n            <v-col   v-for=\"(item, index) in this.listOfArtistsName\"\n                     :key=\"index\" cols=\"auto\">\n              <v-card id=\"ArtistNameSearchPage\" @click=\"sendInfosToArtistPage(index)\" :elevation=\"9\" height=\"70\" width=\"500\" dark style=\"display: flex; flex-direction: row; justify-content: center; align-items: center\">\n                <v-card-title v-text=\"item\"></v-card-title>\n              </v-card>\n            </v-col>\n          </v-row>\n        </v-card>\n\n        <v-card\n          id=\"magniol\"\n          v-if=\"this.displayAlbumsCard\"\n          :elevation=\"9\"\n          height=\"maximum\"\n          width=\"2000\"\n\n          style=\"display: flex; flex-direction: column; background-color: #E0E0E0; align-items: center; margin-top: 3%\"\n        >\n          <v-card-title\n            style=\"font-family: Aclonica\"\n          >Albums</v-card-title>\n          <v-divider></v-divider>\n          <!---------------------------------------------------------------------------------------->\n          <!---------------------------------------------------------------------------------------->\n          <v-container>\n            <v-row justify=\"center\">\n              <v-col\n                v-for=\"(item, index) in this.ListOfArtistId\"\n                :key=\"index\"\n                cols=\"auto\"\n              >\n                <v-card\n                  :elevation=\"9\"\n                  height=\"maximum\"\n                  width=\"400\"\n                  dark\n                  id=\"cardMain\"\n                  style=\"display: flex; flex-direction: row; border-radius: 320px 50px 50px 320px\"\n                  class=\"cardAlbums\"\n                  v-on:click=\"sendInfosToAlbumPage(index)\"\n                >\n                  <v-img\n                    class=\"img\"\n                    max-height=\"100\"\n                    max-width=\"100\"\n                    height=\"100\"\n                    width=\"100\"\n                    :elevation=\"5\"\n                    :src=\"listOfWorkurl1100[index]\"\n                    style=\"border-radius: 12px 12px 12px 12px; opacity: 1\"\n                  ></v-img>\n                  <div>\n                    <v-card-title class=\"card-title\" style=\"font-family: Aclonica\">{{\n                      listOfCollectionCensoredName[index]\n                      }}</v-card-title>\n                  </div>\n                </v-card>\n              </v-col>\n            </v-row>\n          </v-container>\n          <!---------------------------------------------------------------------------------------->\n          <!---------------------------------------------------------------------------------------->\n        </v-card>\n\n        <v-card\n          v-if=\"this.displaySongsCard\"\n          :elevation=\"9\"\n          height=\"maximum\"\n          width=\"2000\"\n          id=\"cardMainTracks\"\n          style=\"display: flex; flex-direction: column; background-color: #E0E0E0; align-items: center; margin-top: 3%\"\n        >\n          <v-card-title\n            style=\"font-family: Aclonica\"\n          >songs</v-card-title>\n          <v-divider></v-divider>\n          <!---------------------------------------------------------------------------------------->\n          <!-------------------------------- Songs ------------------------------------------------>\n          <!---------------------------------------------------------------------------------------->\n\n          <v-row justify=\"center\">\n            <v-col\n              v-for=\"(item, index) in this.ListOfCollectionId\"\n              :key=\"index\"\n              cols=\"auto\"\n            >\n              <v-card :elevation=\"9\" height=\"70\" width=\"500\" dark id=\"cardMainSongs\" >\n                <div id=\"cardMainDiv\">\n                  <v-card-text v-text=\"index\"></v-card-text>\n                  <v-btn\n                    style=\"border-radius: 100px 100px 100px 10px\"\n                  >\n                    <v-icon color=\"#ff1744\" size=\"30\" class=\"stop\"\n                    >mdi-play-circle</v-icon\n                    >\n                  </v-btn>\n                </div>\n                <div class=\"containerRepeat\">\n                  <v-card-text v-text=\"listOfTrackCensoredName[index]\"></v-card-text>\n                </div>\n                <div class=\"containerRepeat\">\n                  <v-card-text v-text=\"listOfPrimaryGenreName[index]\"></v-card-text>\n                </div>\n\n                <div class=\"containerRepeat\">\n                  <v-card-text\n                    v-text=\"millisToMinutesAndSeconds(listOfTrackTimeMillis[index])\"\n                  ></v-card-text>\n                </div>\n\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                      v-on=\"on\"\n                      style=\"background-color: #1e1e1e\"\n                      :elevation=\"6\"\n                    >\n                      <v-icon\n                        style=\"color: #ff1744; background-color: #1e1e1e; font-size: xx-large\"\n                      >mdi-plus</v-icon\n                      >\n                    </v-btn>\n                  </template>\n                  <span>Click to add music in playlist</span>\n                </v-tooltip>\n              </v-card>\n            </v-col>\n          </v-row>\n          <!---------------------------------------------------------------------------------------------->\n          <!---------------------------------------------------------------------------------------------->\n\n        </v-card>\n      </div>\n      <!---------------------------------------------------------------------------------------------->\n      <!---------------------------------------------------------------------------------------------->\n      <v-row justify=\"center\">\n        <v-dialog\n          v-model=\"dialogSettingsSearch\"\n          max-width=\"290\"\n          persistent\n          overlay-opacity=\"0.8\"\n        >\n          <v-card>\n            <v-card-title class=\"headline\" style=\"color: #ff1744\"\n            >search settings</v-card-title\n            >\n\n            <v-card-text style=\"font-size: large; font-weight: bold\">\n              <v-list>\n                <v-list-item>\n                  <v-list-item-action>\n                    <v-switch\n                      v-model=\"globalSearch\"\n                      color=\"#ff1744\"\n                      @change=\"globalSearchfunctionSwitch\"\n                    ></v-switch>\n                  </v-list-item-action>\n                  <v-list-item-title> global search</v-list-item-title>\n                </v-list-item>\n\n                <v-list-item>\n                  <v-list-item-action>\n                    <v-switch\n                      v-model=\"SearchByAlbum\"\n                      color=\"#ff1744\"\n                      @change=\"SearchByAlbumfunctionSwitch\"\n                    ></v-switch>\n                  </v-list-item-action>\n                  <v-list-item-title>Search by album</v-list-item-title>\n                </v-list-item>\n\n                <v-list-item>\n                  <v-list-item-action>\n                    <v-switch\n                      v-model=\"SearchByArtist\"\n                      color=\"#ff1744\"\n                      @change=\"SearchByArtistfunctionSwitch\"\n                    ></v-switch>\n                  </v-list-item-action>\n                  <v-list-item-title>Search by artist</v-list-item-title>\n                </v-list-item>\n\n                <v-list-item>\n                  <v-list-item-action>\n                    <v-switch\n                      v-model=\"SearchBySong\"\n                      color=\"#ff1744\"\n                      @change=\"SearchBySongfunctionSwitch\"\n                    ></v-switch>\n                  </v-list-item-action>\n                  <v-list-item-title> Search by song</v-list-item-title>\n                </v-list-item>\n              </v-list>\n            </v-card-text>\n            <!---------------------------------------------------------------------------------------------->\n            <!---------------------------------------------------------------------------------------------->\n            <v-container fluid>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-combobox\n                    v-model=\"selectAutocompleteLimitFetchData\"\n                    :items=\"itemsCombobox1\"\n                    label=\"limit autocomplete data\"\n                    type=\"Number\"\n                    outlined\n                    dense\n                  ></v-combobox>\n                </v-col>\n              </v-row>\n            </v-container>\n            <!---------------------------------------------------------------------------------------------->\n            <v-container fluid>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-combobox\n                    v-model=\"selectLimitFetchData\"\n                    :items=\"itemsCombobox2\"\n                    label=\"maximum number of results\"\n                    type=\"Number\"\n                    outlined\n                    dense\n                  ></v-combobox>\n                </v-col>\n              </v-row>\n            </v-container>\n            <!---------------------------------------------------------------------------------------------->\n            <!---------------------------------------------------------------------------------------------->\n            <v-card-actions>\n              <v-spacer></v-spacer>\n\n              <v-btn\n                style=\"border-style: solid; border-color: #ff1744; color: #ff1744\"\n                text\n                @click=\"closeDialogSettingsSearch\"\n              >\n                ok\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-row>\n      <!---------------------------------------------------------------------------------------------->\n    </v-app>\n  </div>\n</template>\n\n<script>\n  import * as api from \"@/api\";\n  import Cookies from \"js-cookie\";\n  export default {\n    name: \"Search\",\n    components: {},\n\n    data: () => ({\n      dialogSettingsSearch: false,\n      globalSearch: true,\n      SearchByAlbum: false,\n      SearchByArtist: false,\n      SearchBySong: false,\n      descriptionLimit: 60,\n      results: [],\n      isLoading: false,\n      model: null,\n      search: null,\n      LabelSearch: \"Global Search\",\n      placeholderSearch: \"Start typing to make global search\",\n      tokenSearchVue: \"\",\n      displayArtistCard: true,\n      displayAlbumsCard: true,\n      displaySongsCard: true,\n      autocompleteLimitFetchDataDefault: 30,\n      limitFetchDataDefault: 10,\n      selectAutocompleteLimitFetchData: 30,\n      selectLimitFetchData: 10,\n      itemsCombobox1: [\n        10,\n        20,\n        40,\n        60,\n        80,\n        100\n      ],\n      itemsCombobox2: [\n        10,\n        20,\n        40,\n        60,\n        80,\n        100\n      ],\n      listOfArtistsName: [],\n      ListOfCollectionId: [],\n      ListOfArtistId: [],\n      listOfWorkurl1100: [],\n      listOfCollectionCensoredName: [],\n      listOfPreviewUrl: [],\n      listOfTrackCensoredName: [],\n      listOfPrimaryGenreName: [],\n      listOfTrackTimeMillis: []\n\n    }),\n    props:{\n      isRegister : Boolean\n    },\n    computed: {\n      fields() {\n        if (!this.model) return [];\n\n        return Object.keys(this.model).map(key => {\n          return {\n            key,\n            value: this.model[key] || \"n/a\"\n          };\n        });\n      },\n      items() {\n        return this.results.map(entry => {\n          const artistName =\n            entry.artistName.length > this.descriptionLimit\n              ? entry.artistName.slice(0, this.descriptionLimit) + \"...\"\n              : entry.artistName;\n\n          return Object.assign({}, entry, { artistName });\n        });\n      }\n    },\n    watch: {\n      search() {\n        // Items have already been loaded\n        if (this.items.length > 0) return;\n\n        // Items have already been requested\n        if (this.isLoading) return;\n\n        this.isLoading = true;\n\n        var myHeads = new Headers();\n        myHeads.append(\n          \"Authorization\",\n          this.tokenSearchVue\n        );\n\n        var request = {\n          method: \"GET\",\n          headers: myHeads,\n          redirect: \"follow\"\n        };\n\n        const queryParams = { q: this.search, limit: \"30\" };\n        const queryString = new URLSearchParams(queryParams).toString();\n        fetch(`https://ubeat.herokuapp.com/search?${queryString}`, request)\n          .then(response => response.json())\n          .then(json => {\n            const { resultCount, results } = json;\n            this.resultCount = resultCount;\n            this.results = results;\n          })\n          .catch(error => {\n            console.log(\"error\", error);\n          })\n          .finally(() => (this.isLoading = false));\n      }\n    },\n    methods: {\n      sendInfosToAlbumPage(index) {\n       let value = this.ListOfCollectionId[index];\n        this.$router.push({\n          name: \"Album\",\n          params: { id: value },\n          query: { state: true }\n        });\n      },\n      sendInfosToArtistPage(index) {\n        let value = this.ListOfArtistId[index];\n        this.$router.push({\n          name: \"Artist\",\n          params: { id: value },\n          query: { state: true }\n        });\n      },\n      sendDataToParent(value) {\n        this.$emit(\"updateState\", value);\n      },\n      millisToMinutesAndSeconds(millis) {\n        var minutes = Math.floor(millis / 60000);\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n      },\n      sendDataToNavigationArtist(value){\n        this.$emit(\"UpdateStateSliderPositionInNavifationPage\", value);\n      },\n      closeDialogSettingsSearch() {\n        this.dialogSettingsSearch = false;\n        this.autocompleteLimitFetchDataDefault = this.selectAutocompleteLimitFetchData;\n        this.limitFetchDataDefault = this.selectLimitFetchData;\n      },\n      OpenDialogSettingsSearch() {\n        this.dialogSettingsSearch = true;\n        this.listOfArtistsName = [];\n        this.ListOfCollectionId = [];\n        this.ListOfArtistId = [];\n        this.listOfWorkurl1100 = [];\n        this.listOfCollectionCensoredName = [];\n        this.listOfPreviewUrl = [];\n        this.listOfTrackCensoredName = [];\n        this.listOfPrimaryGenreName = [];\n        this.listOfTrackTimeMillis = [];\n      },\n      globalSearchfunctionSwitch() {\n        if (this.globalSearch) {\n          this.SearchByAlbum = false;\n          this.SearchByArtist = false;\n          this.SearchBySong = false;\n          this.LabelSearch = \"Global Search\";\n          this.placeholderSearch = \"Start typing to make global search\";\n          this.displayArtistCard = true;\n          this.displayAlbumsCard = true;\n          this.displaySongsCard = true;\n        } else {\n          if (\n            (this.SearchBySong === false) &\n            (this.SearchByAlbum === false) &\n            (this.SearchByArtist === false)\n          ) {\n            this.globalSearch = true;\n            this.LabelSearch = \"Global Search\";\n            this.placeholderSearch = \"Start typing to make global search\";\n            this.displayArtistCard = true;\n            this.displayAlbumsCard = true;\n            this.displaySongsCard = true;\n          }\n        }\n      },\n      SearchByAlbumfunctionSwitch() {\n        if (this.SearchByAlbum) {\n          this.globalSearch = false;\n          this.SearchByArtist = false;\n          this.SearchBySong = false;\n          this.LabelSearch = \"Search by Album\";\n          this.placeholderSearch = \"Start typing to find Album\";\n          this.displayArtistCard = false;\n          this.displayAlbumsCard = true;\n          this.displaySongsCard = false;\n        } else {\n          if (\n            (this.SearchBySong === false) &\n            (this.SearchByAlbum === false) &\n            (this.SearchByArtist === false) &\n            (this.globalSearch === false)\n          ) {\n            this.globalSearch = true;\n            this.LabelSearch = \"Global Search\";\n            this.placeholderSearch = \"Start typing to make global search\";\n            this.displayArtistCard = true;\n            this.displayAlbumsCard = true;\n            this.displaySongsCard = true;\n          }\n        }\n      },\n      SearchByArtistfunctionSwitch() {\n        if (this.SearchByArtist) {\n          this.SearchByAlbum = false;\n          this.globalSearch = false;\n          this.SearchBySong = false;\n          this.LabelSearch = \"Search by Artist\";\n          this.placeholderSearch = \"Start typing to find Artist\";\n          this.displayArtistCard = true;\n          this.displayAlbumsCard = false;\n          this.displaySongsCard = false;\n        } else {\n          if (\n            (this.SearchBySong === false) &\n            (this.SearchByAlbum === false) &\n            (this.SearchByArtist === false) &\n            (this.globalSearch === false)\n          ) {\n            this.globalSearch = true;\n            this.LabelSearch = \"Global Search\";\n            this.placeholderSearch = \"Start typing to make global search\";\n            this.displayArtistCard = true;\n            this.displayAlbumsCard = true;\n            this.displaySongsCard = true;\n          }\n        }\n      },\n      SearchBySongfunctionSwitch() {\n        if (this.SearchBySong) {\n          this.SearchByAlbum = false;\n          this.SearchByArtist = false;\n          this.globalSearch = false;\n          this.LabelSearch = \"Search by Song\";\n          this.placeholderSearch = \"Start typing to make find song\";\n          this.displayArtistCard = false;\n          this.displayAlbumsCard = false;\n          this.displaySongsCard = true;\n        } else {\n          if (\n            (this.SearchBySong === false) &\n            (this.SearchByAlbum === false) &\n            (this.SearchByArtist === false) &\n            (this.globalSearch === false)\n          ) {\n            this.globalSearch = true;\n            this.LabelSearch = \"Global Search\";\n            this.placeholderSearch = \"Start typing to make global search\";\n            this.displayArtistCard = true;\n            this.displayAlbumsCard = true;\n            this.displaySongsCard = true;\n          }\n        }\n      },\n      async getGlobalSearchApiSearchVue(search, limit, myHeads){\n        return await api.getGlobalSearchApi(search, limit, myHeads)\n      },\n      async makeSearch() {\n        if(this.model !== null & this.model !== undefined){\n          if (this.globalSearch) {\n            this.listOfArtistsName = [];\n            this.ListOfCollectionId = [];\n            this.ListOfArtistId = [];\n            this.listOfWorkurl1100 = [];\n            this.listOfCollectionCensoredName = [];\n            this.listOfPreviewUrl = [];\n            this.listOfTrackCensoredName = [];\n            this.listOfPrimaryGenreName = [];\n            this.listOfTrackTimeMillis = [];\n            let myHeads = new Headers();\n            myHeads.append(\n              \"Authorization\",\n              this.tokenSearchVue\n            );\n            let value = await api.getGlobalSearchApi(this.model.artistName, this.limitFetchDataDefault, myHeads);\n            value.forEach((item) => {\n              this.listOfArtistsName.push(item.artistName);\n              this.ListOfCollectionId.push(item.collectionId);\n              this.ListOfArtistId.push(item.artistId);\n              this.listOfWorkurl1100.push(item.artworkUrl100);\n              this.listOfCollectionCensoredName.push(item.collectionCensoredName);\n              //--------------------------------------------------------------------------------------\n              this.listOfPreviewUrl.push(item.previewUrl);\n              this.listOfTrackCensoredName.push(item.trackCensoredName);\n              this.listOfPrimaryGenreName.push(item.primaryGenreName);\n              this.listOfTrackTimeMillis.push(item.trackTimeMillis);\n            });\n          } else if (this.SearchByAlbum) {\n            this.listOfArtistsName = [];\n            this.ListOfCollectionId = [];\n            this.ListOfArtistId = [];\n            this.listOfWorkurl1100 = [];\n            this.listOfCollectionCensoredName = [];\n            this.listOfPreviewUrl = [];\n            this.listOfTrackCensoredName = [];\n            this.listOfPrimaryGenreName = [];\n            this.listOfTrackTimeMillis = [];\n            let myHeads = new Headers();\n            myHeads.append(\n              \"Authorization\",\n              this.tokenSearchVue\n            );\n            let value = await api.getAlbumSearch(this.model.artistName, this.limitFetchDataDefault, myHeads);\n            value.forEach((item) => {\n              this.ListOfArtistId.push(item.artistId);\n              this.listOfWorkurl1100.push(item.artworkUrl100);\n              this.listOfCollectionCensoredName.push(item.collectionCensoredName);\n            });\n          } else if (this.SearchByArtist) {\n            this.listOfArtistsName = [];\n            this.ListOfCollectionId = [];\n            this.ListOfArtistId = [];\n            this.listOfWorkurl1100 = [];\n            this.listOfCollectionCensoredName = [];\n            this.listOfPreviewUrl = [];\n            this.listOfTrackCensoredName = [];\n            this.listOfPrimaryGenreName = [];\n            this.listOfTrackTimeMillis = [];\n            let myHeads = new Headers();\n            myHeads.append(\n              \"Authorization\",\n              this.tokenSearchVue\n            );\n            let value = await api.getArtistSearch(this.model.artistName, this.limitFetchDataDefault, myHeads);\n            value.forEach((item) => {\n              this.listOfArtistsName.push(item.artistName);\n            });\n          } else if (this.SearchBySong) {\n            this.listOfArtistsName = [];\n            this.ListOfCollectionId = [];\n            this.ListOfArtistId = [];\n            this.listOfWorkurl1100 = [];\n            this.listOfCollectionCensoredName = [];\n            this.listOfPreviewUrl = [];\n            this.listOfTrackCensoredName = [];\n            this.listOfPrimaryGenreName = [];\n            this.listOfTrackTimeMillis = [];\n            let myHeads = new Headers();\n            myHeads.append(\n              \"Authorization\",\n              this.tokenSearchVue\n            );\n            let value = await api.getSongSearch(this.model.artistName, this.limitFetchDataDefault, myHeads);\n            value.forEach((item) => {\n              this.ListOfCollectionId.push(item.collectionId);\n              this.listOfPreviewUrl.push(item.previewUrl);\n              this.listOfTrackCensoredName.push(item.trackCensoredName);\n              this.listOfPrimaryGenreName.push(item.primaryGenreName);\n              this.listOfTrackTimeMillis.push(item.trackTimeMillis);\n            });\n\n          }\n        }\n      }\n    },\n    created() {\n      if(Cookies.get(\"tokenNewLogin\") === null || Cookies.get(\"tokenNewLogin\") === undefined){\n        this.$router.push({ name: \"Register\" });\n      }\n    },\n    mounted() {\n      if(Cookies.get(\"tokenNewLogin\") === null || Cookies.get(\"tokenNewLogin\") === undefined){\n        this.$router.push({ name: \"Register\" });\n      }else {\n        this.sendDataToNavigationArtist(4);\n        this.tokenSearchVue = Cookies.get(\"tokenNewLogin\");\n        this.displayArtistCard = true;\n        this.displayAlbumsCard = true;\n        this.displaySongsCard = true;\n        this.sendDataToParent(true);\n      }\n    }\n  };\n</script>\n\n<style scoped>\n  #cardMainSongs {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  #cardMainSongs:hover{\n    cursor: grab;\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    background-color: #ff1744;\n  }\n\n  #ArtistNameSearchPage:hover{\n    cursor: grab;\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    background-color: #ff1744;\n  }\n\n  #cardMainDiv {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  #cardMain:hover{\n    background-color: #00c853;\n  }\n  #magniol:hover{\n    background-color: #00c853;\n  }\n</style>\n"]}]}