{"remainingRequest":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/src/App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/src/App.vue","mtime":1588549477000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250ZW50IHsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyKA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <Navigation v-if=\"this.isRegister\"\n                :sliderValue=\"sliderValue\"\n                :userAvatar=\"userAvatar\"\n                :emailUser=\"emailUser\"\n                :nameUser=\"nameUser\"\n                :userFollowers=\"userFollowers\"\n                :tracks=\"tracks\"\n                :showEmailAddressInNavigationVue=\"showEmailAddressInNavigationVue\"></Navigation>\n    <v-content class=\"content\">\n      <router-view\n        :filterArtistList=\"filterArtistList\"\n        :ArtistName=\"ArtistName\"\n        :NumberOfArtistsAlbum=\"NumberOfArtistsAlbum\"\n        :listAlbumsArtist=\"listAlbumsArtist\"\n        :displayArtistPage=\"displayArtistPage\"\n        :listOfMusicShare=\"listOfMusicShare\"\n        :listOfPlaylistCreateShare=\"listOfPlaylistCreateShare\"\n        @updateState=\"update($event)\"\n        @UpdateStateSliderPositionInNavifationPage=\"UpdateSliderPositionInNavifationPage($event)\"\n        :imageArtist=\"imageArtist\"\n        :artistBio=\"artistBio\"\n        :showEmailAddressInNavigationVue=\"showEmailAddressInNavigationVue\"\n        :isRegister=\"isRegister\"\n        :ListIdOfPlaylistShare=\"ListIdOfPlaylistShare\"\n        :listOfTrackIdSongSendToPlaylist=\"listOfTrackIdSongSendToPlaylist\"\n        @updatelistOfTrackIdSongSendToPlaylistInOtherVue=\"updatelistOfTrackIdSongSendToPlaylist($event)\"\n        @updateVariableInArtistVueFastInArtistPAge1=\"updateVariableInArtistVue1($event)\"\n        @updateVariableInArtistVueFastInArtistPAge2=\"updateVariableInArtistVue2($event)\"\n        @updateVariableInArtistVueFastInArtistPAge3=\"updateVariableInArtistVue3($event)\"\n        @updateVariableInArtistVueFastInArtistPAge4=\"updateVariableInArtistVue4($event)\"\n      ></router-view>\n    </v-content>\n  </v-app>\n</template>\n<script>\nimport Navigation from \"./components/Navigation.vue\";\nimport * as api from \"@/api\";\nimport Cookies from \"js-cookie\";\n\nexport default {\n  name: \"App\",\n  components: { Navigation: Navigation },\n  data: () => ({\n    randomItemId: 0,\n    listIdArtist: [],\n    listIdNameArtist: [],\n    listAlbumsArtist: [],\n    mainList: [],\n    filterArtistList: [],\n    filterIdNameArtist: [],\n    artistInfosList: [],\n    ArtistName: \"\",\n    NumberOfArtistsAlbum: null,\n    artistAlbum: [],\n    artistAlbumName: [],\n    logInfo: \"\",\n    email: \"\",\n    token: \"\",\n    globalSearch: \"\",\n    albumSearch: \"\",\n    artistSearch: \"\",\n    userSearch: \"\",\n    displayArtistPage: false,\n    listOfMusicShare: [],\n    listOfPlaylistCreateShare: [],\n    ListIdOfPlaylistShare: [],\n    isRegister: false,\n    avatar: \"\",\n    imageArtist: \"\",\n    artistBio:\"\",\n    sliderValue: 0,\n    showEmailAddressInNavigationVue: \"\",\n    userAvatar:\"\",\n    TokenUser:\"\",\n    emailUser:\"\",\n    nameUser:\"\",\n    userFollowers:[],\n    tracks:[],\n    listOfTrackIdSongSendToPlaylist: [],\n    idUser:\"\"\n  }),\n  methods: {\n    updateVariableInArtistVue1(value1){\n      this.NumberOfArtistsAlbum = value1;\n    },\n    updateVariableInArtistVue2(value2){\n      this.listAlbumsArtist = value2;\n    },\n    updateVariableInArtistVue3(value3){\n      this.ArtistName = value3;\n    },\n    updateVariableInArtistVue4(value4){\n      this.artistBio = value4;\n    },\n    update(event) {\n      this.isRegister = event;\n    },\n    UpdateSliderPositionInNavifationPage(event){\n      this.sliderValue = event;\n    },\n    updatelistOfTrackIdSongSendToPlaylist(event){\n      this.listOfTrackIdSongSendToPlaylist.push(event);\n    },\n    radomFilterArtistListId() {\n      this.randomItemId = this.filterArtistList[\n        Math.floor(Math.random() * this.filterArtistList.length)\n      ];\n    }\n  },\n  async created() {\n   let idUser = \"5e2c9748c9d8250004f61599\"\n    this.ArtistName = \"PNL\";\n    let returnedValue = await api.getAlbumsInfos(\"370571621\");\n    this.listAlbumsArtist = returnedValue.results;\n    this.listAlbumsArtist.shift(); //eleve le premier element de la liste album artist que nous n avons pas besoin\n    this.NumberOfArtistsAlbum = returnedValue.resultCount-1;\n    this.displayArtistPage = true;\n\n    const myHeaders = new Headers();\n    myHeaders.append(\"Authorization\",this.TokenUser);\n    const requestParameters = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n\n      var userInfo = await api.getInfoUser(idUser, requestParameters);\n      this.emailUser = userInfo.email;\n      this.nameUser = userInfo.name;\n      this.userFollowers = userInfo.following;\n\n    let artistInfo = await api.getInfoArtist(this.ArtistName);\n    this.imageArtist = artistInfo.json.artist.image[2][\"#text\"];\n    this.artistBio = artistInfo.json.artist.bio.summary;\n    this.userAvatar = await api.getAvatarImage(this.emailUser);\n\n\n\n    let userPlaylist = await api.getPlaylistUser(idUser, requestParameters);\n   let listTracks =\"\";\n    userPlaylist.forEach(item => {\n      listTracks=item.tracks\n    })\n    this.tracks = [];\n    listTracks.forEach(item => {\n      this.tracks.push(item.trackName)\n    })\n\n  },\n  mounted() {\n    this.showEmailAddressInNavigationVue = Cookies.get(\"emailAddress\");\n    this.TokenUser = Cookies.get(\"tokenNewLogin\");\n    console.log(\"Email \", this.showEmailAddressInNavigationVue);\n    if(Cookies.get(\"tokenNewLogin\") === null || Cookies.get(\"tokenNewLogin\") === undefined){\n      this.$router.push({ name: \"Register\" });\n      this.isRegister =false;\n    }\n\n    else{\n        console.log(\"la valeur est\", this.listOfPlaylistCreateShare);\n    }\n\n  }\n};\n</script>\n<style scoped>\n.content {\n}\n</style>\n"]}]}