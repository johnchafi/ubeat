{"remainingRequest":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/babel-loader/lib/index.js!/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vuetify/lib/services/goto/index.js","dependencies":[{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/vuetify/lib/services/goto/index.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/john/Desktop/MONprojet3001/ubeat-h2020-h20-team-07/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBjYWxsID09PSAiZnVuY3Rpb24iKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfQoKZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWQiKTsgfSByZXR1cm4gc2VsZjsgfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CgovLyBFeHRlbnNpb25zCmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgKiBhcyBlYXNpbmdQYXR0ZXJucyBmcm9tICcuL2Vhc2luZy1wYXR0ZXJucyc7CmltcG9ydCB7IGdldENvbnRhaW5lciwgZ2V0T2Zmc2V0IH0gZnJvbSAnLi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ29UbyhfdGFyZ2V0KSB7CiAgdmFyIF9zZXR0aW5ncyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CgogIHZhciBzZXR0aW5ncyA9IF9vYmplY3RTcHJlYWQoewogICAgY29udGFpbmVyOiBkb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50IHx8IGRvY3VtZW50LmJvZHkgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LAogICAgZHVyYXRpb246IDUwMCwKICAgIG9mZnNldDogMCwKICAgIGVhc2luZzogJ2Vhc2VJbk91dEN1YmljJywKICAgIGFwcE9mZnNldDogdHJ1ZQogIH0sIF9zZXR0aW5ncyk7CgogIHZhciBjb250YWluZXIgPSBnZXRDb250YWluZXIoc2V0dGluZ3MuY29udGFpbmVyKTsKICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqLwoKICBpZiAoc2V0dGluZ3MuYXBwT2Zmc2V0ICYmIGdvVG8uZnJhbWV3b3JrLmFwcGxpY2F0aW9uKSB7CiAgICB2YXIgaXNEcmF3ZXIgPSBjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKCd2LW5hdmlnYXRpb24tZHJhd2VyJyk7CiAgICB2YXIgaXNDbGlwcGVkID0gY29udGFpbmVyLmNsYXNzTGlzdC5jb250YWlucygndi1uYXZpZ2F0aW9uLWRyYXdlci0tY2xpcHBlZCcpOwogICAgdmFyIF9nb1RvJGZyYW1ld29yayRhcHBsaSA9IGdvVG8uZnJhbWV3b3JrLmFwcGxpY2F0aW9uLAogICAgICAgIGJhciA9IF9nb1RvJGZyYW1ld29yayRhcHBsaS5iYXIsCiAgICAgICAgdG9wID0gX2dvVG8kZnJhbWV3b3JrJGFwcGxpLnRvcDsKICAgIHNldHRpbmdzLm9mZnNldCArPSBiYXI7CiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqLwoKICAgIGlmICghaXNEcmF3ZXIgfHwgaXNDbGlwcGVkKSBzZXR0aW5ncy5vZmZzZXQgKz0gdG9wOwogIH0KCiAgdmFyIHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpOwogIHZhciB0YXJnZXRMb2NhdGlvbjsKCiAgaWYgKHR5cGVvZiBfdGFyZ2V0ID09PSAnbnVtYmVyJykgewogICAgdGFyZ2V0TG9jYXRpb24gPSBnZXRPZmZzZXQoX3RhcmdldCkgLSBzZXR0aW5ncy5vZmZzZXQ7CiAgfSBlbHNlIHsKICAgIHRhcmdldExvY2F0aW9uID0gZ2V0T2Zmc2V0KF90YXJnZXQpIC0gZ2V0T2Zmc2V0KGNvbnRhaW5lcikgLSBzZXR0aW5ncy5vZmZzZXQ7CiAgfQoKICB2YXIgc3RhcnRMb2NhdGlvbiA9IGNvbnRhaW5lci5zY3JvbGxUb3A7CiAgaWYgKHRhcmdldExvY2F0aW9uID09PSBzdGFydExvY2F0aW9uKSByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRhcmdldExvY2F0aW9uKTsKICB2YXIgZWFzZSA9IHR5cGVvZiBzZXR0aW5ncy5lYXNpbmcgPT09ICdmdW5jdGlvbicgPyBzZXR0aW5ncy5lYXNpbmcgOiBlYXNpbmdQYXR0ZXJuc1tzZXR0aW5ncy5lYXNpbmddOwogIC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovCgogIGlmICghZWFzZSkgdGhyb3cgbmV3IFR5cGVFcnJvcigiRWFzaW5nIGZ1bmN0aW9uIFwiIi5jb25jYXQoc2V0dGluZ3MuZWFzaW5nLCAiXCIgbm90IGZvdW5kLiIpKTsgLy8gQ2Fubm90IGJlIHRlc3RlZCBwcm9wZXJseSBpbiBqc2RvbQogIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpwcm9taXNlLW11c3QtY29tcGxldGUKCiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi8KCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICByZXR1cm4gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uIHN0ZXAoY3VycmVudFRpbWUpIHsKICAgICAgdmFyIHRpbWVFbGFwc2VkID0gY3VycmVudFRpbWUgLSBzdGFydFRpbWU7CiAgICAgIHZhciBwcm9ncmVzcyA9IE1hdGguYWJzKHNldHRpbmdzLmR1cmF0aW9uID8gTWF0aC5taW4odGltZUVsYXBzZWQgLyBzZXR0aW5ncy5kdXJhdGlvbiwgMSkgOiAxKTsKICAgICAgY29udGFpbmVyLnNjcm9sbFRvcCA9IE1hdGguZmxvb3Ioc3RhcnRMb2NhdGlvbiArICh0YXJnZXRMb2NhdGlvbiAtIHN0YXJ0TG9jYXRpb24pICogZWFzZShwcm9ncmVzcykpOwogICAgICB2YXIgY2xpZW50SGVpZ2h0ID0gY29udGFpbmVyID09PSBkb2N1bWVudC5ib2R5ID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCA6IGNvbnRhaW5lci5jbGllbnRIZWlnaHQ7CgogICAgICBpZiAocHJvZ3Jlc3MgPT09IDEgfHwgY2xpZW50SGVpZ2h0ICsgY29udGFpbmVyLnNjcm9sbFRvcCA9PT0gY29udGFpbmVyLnNjcm9sbEhlaWdodCkgewogICAgICAgIHJldHVybiByZXNvbHZlKHRhcmdldExvY2F0aW9uKTsKICAgICAgfQoKICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApOwogICAgfSk7CiAgfSk7Cn0KZ29Uby5mcmFtZXdvcmsgPSB7fTsKCmdvVG8uaW5pdCA9IGZ1bmN0aW9uICgpIHt9OwoKZXhwb3J0IHZhciBHb3RvID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1NlcnZpY2UpIHsKICBfaW5oZXJpdHMoR290bywgX1NlcnZpY2UpOwoKICBmdW5jdGlvbiBHb3RvKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBHb3RvKTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihHb3RvKS5jYWxsKHRoaXMpKTsKICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgZ29Ubyk7CiAgfQoKICByZXR1cm4gR290bzsKfShTZXJ2aWNlKTsKR290by5wcm9wZXJ0eSA9ICdnb1RvJzs="},{"version":3,"sources":["../../../src/services/goto/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as easingPatterns from './easing-patterns'\nimport {\n  getContainer,\n  getOffset,\n} from './util'\n\n// Types\nimport { GoToOptions, VuetifyGoToTarget } from 'vuetify/types/services/goto'\n\nimport { VuetifyServiceContract } from 'vuetify/types/services'\n\nexport default function goTo (\n  _target: VuetifyGoToTarget,\n  _settings: Partial<GoToOptions> = {}\n): Promise<number> {\n  const settings: GoToOptions = {\n    container: (document.scrollingElement as HTMLElement | null) || document.body || document.documentElement,\n    duration: 500,\n    offset: 0,\n    easing: 'easeInOutCubic',\n    appOffset: true,\n    ..._settings,\n  }\n  const container = getContainer(settings.container)\n\n  /* istanbul ignore else */\n  if (settings.appOffset && goTo.framework.application) {\n    const isDrawer = container.classList.contains('v-navigation-drawer')\n    const isClipped = container.classList.contains('v-navigation-drawer--clipped')\n    const { bar, top } = goTo.framework.application as any\n\n    settings.offset += bar\n    /* istanbul ignore else */\n    if (!isDrawer || isClipped) settings.offset += top\n  }\n\n  const startTime = performance.now()\n\n  let targetLocation: number\n  if (typeof _target === 'number') {\n    targetLocation = getOffset(_target) - settings.offset!\n  } else {\n    targetLocation = getOffset(_target) - getOffset(container) - settings.offset!\n  }\n\n  const startLocation = container.scrollTop\n  if (targetLocation === startLocation) return Promise.resolve(targetLocation)\n\n  const ease = typeof settings.easing === 'function'\n    ? settings.easing\n    : easingPatterns[settings.easing!]\n  /* istanbul ignore else */\n  if (!ease) throw new TypeError(`Easing function \"${settings.easing}\" not found.`)\n\n  // Cannot be tested properly in jsdom\n  // tslint:disable-next-line:promise-must-complete\n  /* istanbul ignore next */\n  return new Promise(resolve => requestAnimationFrame(function step (currentTime: number) {\n    const timeElapsed = currentTime - startTime\n    const progress = Math.abs(settings.duration ? Math.min(timeElapsed / settings.duration, 1) : 1)\n\n    container.scrollTop = Math.floor(startLocation + (targetLocation - startLocation) * ease(progress))\n\n    const clientHeight = container === document.body ? document.documentElement.clientHeight : container.clientHeight\n    if (progress === 1 || clientHeight + container.scrollTop === container.scrollHeight) {\n      return resolve(targetLocation)\n    }\n\n    requestAnimationFrame(step)\n  }))\n}\n\ngoTo.framework = {} as Record<string, VuetifyServiceContract>\ngoTo.init = () => {}\n\nexport class Goto extends Service {\n  public static property: 'goTo' = 'goTo'\n\n  constructor () {\n    super()\n\n    return goTo\n  }\n}\n"],"sourceRoot":""}]}